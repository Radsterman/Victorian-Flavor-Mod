### this is an imported file. please make as little changes to this file as possible.
### when you make a change please mark it very clearly using a pair of comment lines with the text '### v3' and '### to here'
### texture paths and audio event ids are an exception to this and can be changed without marking

window = {
	name = "ingame_pausemenu"
	parentanchor = center
	movable = no
	size = { 100% 105% }
	layer = layer_ingame_hud
	filter_mouse = all

	background = {
		using = Background_Area_Dark
		alpha = 0.7
	}

	background = {
		texture = "gfx/frontend/interface/illustrations/frontend/pause_bg.dds"

		modify_texture = {
			texture = "gfx/frontend/interface/frontend/fade_bg_ingame_menu.dds"
			blend_mode = alphamultiply
		}
	}

	state = {
		name = _show
		using = Animation_FadeIn_Quick
		using = Snapshot_Mute_World_80
		using = Snapshot_Mute_Veh_100
		using = Snapshot_Mute_Vfx_War_100

		position = { 0 0 }

		start_sound = {
			soundeffect = "event:/SFX/UI/Global/game_pause"
		}

		# start_sound = {
		# 	soundeffect = "event:/SFX/UI/Generic/sfx_ui_generic_tab"
		# }

		### v3 addition
		on_start = "[PdxGuiTriggerAllAnimations('menu_logo_v_start')]"
		### to here
	}

	state = {
		name = _hide
		using = Animation_FadeOut_Quick
		start_sound = {
			soundeffect = "event:/SFX/UI/Global/game_unpause"
		}
		position_y = 10

		### v3 addition
		on_start = "[PdxGuiTriggerAllAnimations('menu_animation_reset')]"
		### to here
	}

	widget = {
		size = { 100% 100% }
		scale = "[ScaleToFitElementOutside('(int32)1920', '(int32)1080')]"
		parentanchor = left|vcenter

		widget = {
			parentanchor = vcenter
			position = { 172 -80 }

			vbox = {
				set_parent_size_to_minimum = yes

				vbox = {
					margin = { 30 30 }
					spacing = 10

					### v3 replacement
					widget = {
						size = { 500 232 }

						v3_logo_animation = {
							parentanchor = center
							blockoverride "menu_logo_delay" {
								delay = 0
							}
						}
					}
					# icon = {
					# 	texture = "gfx/frontend/interface/component_masks/ck3_logo.dds"
					# 	size = { 256 232 }
					#
					# 	using = Master_Button_Modify_Texture
					#
					# 	blockoverride "master_color_frame" {
					# 		frame = 4
					# 	}
					# }
					### to here

					spacer = {
						size = { 30 15 }
					}

					### v3 changes for the buttons below:
					### changed sizes slightly, using primary button for "resume" and tertiary for "exit"

					button = {
						using = default_button_primary_big
						using = fontsize_large
						size = { 360 55 }
						name = "resume_button"
						text = "RETURN_TO_GAME"
						using = select_button_sound

						shortcut = "close_window"
						onclick = "[PauseMenu.Resume]"
					}

					vbox = {
						visible = "[GameIsMultiplayer]"
						spacing = 5

						background = {
							using = Background_Area_With_Header
							margin_bottom = 5
						}

						text_single = {
							margin = { 10 0 }
							layoutpolicy_horizontal = expanding
							text = "MULTI_PLAYER"
						}

						text_single = {
							visible = "[Not(IsGamePaused)]"
							text = "FRONTEND_NOT_PAUSED"
						}

						text_single = {
							visible = "[IsGamePaused]"
							text = "FRONTEND_IS_PAUSED"
						}

						text_single = {
							layoutpolicy_horizontal = expanding
							margin_left = 10
							text = "FRONTEND_PLAYERS_COUNT"
						}

						button_frontend = {
							name = "lobby_button"
							size = { 325 50 }
							text = "FRONTEND_GOTO_LOBBY"
							onclick = "[PauseMenu.OpenLobby]"
						}

						spacer = {
							size = { 10 10 }
						}

						hbox = {
							layoutpolicy_horizontal = expanding
							maximumsize = { 275 -1 }
							margin = { 10 5 }
							spacing = 5

							text_multi = {
								layoutpolicy_horizontal = expanding
								max_width = 275
								min_width = 275
								margin = { 0 5 }
								autoresize = yes
								text = "FRONTEND_INVITE"
							}

							button_copy = {
								onclick = "[CopyServerID]"
								tooltip = "FRONTEND_COPY_CLIPBUFFER_TT"
							}
						}
					}

					vbox = {
						margin_top = 20
						spacing = 30

						hbox = {
							visible = "[IsIronmanEnabled]"

							ironman_save_icon = {}

							vbox = {
								spacing = 5
								text_label_center = {
									text = IRONMAN_ENABLED
									default_format = "#low"
									using = Font_Size_Medium
								}
								text_multi = {
									max_width = 290
									min_width = 290
									autoresize = yes
									text = "IRONMAN_PAUSE_MENU_EXPLANATION"
									using = Font_Size_Small
								}
							}
						}

						vbox = {
							spacing = 4

							button = {
								using = default_button
								using = fontsize_large
								size = { 360 50 }
								name = "save_button"
								text = "SAVE_GAME"
								visible = "[Not( IsIronmanEnabled )]"
								onclick = "[PauseMenu.Save]"
								using = select_button_sound
							}

							button = {
								using = default_button
								using = fontsize_large
								size = { 360 50 }
								name = "load_ingame_button_disabled"
								text = "LOAD_GAME"
								default_format = "#weak"
								using = select_button_sound

								visible = "[And(Not( GameHasMultiplePlayers ), Not( PauseMenu.CanLoadIngame ))]"
								enabled = no
								tooltip = "[PauseMenu.LoadIngameTooltip]"
							}
							
							button = {
								using = default_button
								using = fontsize_large
								size = { 360 50 }
								name = "load_ingame_button"
								text = "LOAD_GAME"
								using = select_button_sound

								visible = "[And(Not( GameHasMultiplePlayers ), PauseMenu.CanLoadIngame)]"
								enabled = yes
								onclick = "[PauseMenu.LoadIngame]"
								tooltip = "[PauseMenu.LoadIngameTooltip]"
							}

							button = {
								using = default_button
								using = fontsize_large
								size = { 360 50 }
								name = "open_lobby_button"
								text = "OPEN_LOBBY"

								onclick = "[PauseMenu.OpenLobby]"
								visible = "[Not( Or( Or( Or( PauseMenu.IsLobbyOpen, IsIronmanEnabled ), GameIsMultiplayer ), Not( CanOpenLobby ) ) )]"
								tooltip = "[GetOpenLobbyTooltip]"
							}

							button = {
								using = default_button
								using = fontsize_large
								size = { 360 50 }
								name = "open_lobby_button_login"
								text = "OPEN_LOBBY"
								default_format = "#weak"
								using = select_button_sound

								onclick = "[OnToggleLoginWindow]"
								visible = "[Not( Or( Or( Or( PauseMenu.IsLobbyOpen, IsIronmanEnabled ), GameIsMultiplayer ), CanOpenLobby ) )]"
								tooltip = "[GetOpenLobbyTooltip]"

								icon_online_offline = {
									parentanchor = right|vcenter
									position = { -15 0 }
									frame = 1
								}
							}

							### v3 replacement
							button = {
								using = default_button
								using = fontsize_large
								size = { 360 50 }
								name = "switch_country_button"
								text = "FRONTEND_SWITCH_COUNTRY"
								tooltip = "INGAME_MENU_SWITCH_COUNTRY"
								using = select_button_sound

								onclick = "[PauseMenu.SwitchCountry]"
								visible = "[Not( Or( Or( PauseMenu.IsLobbyOpen, IsIronmanEnabled ), GameHasMultiplePlayers ) )]"
							}
							# button_frontend = {
							# 	name = "switch_character_button"
							# 	size = { 325 58 }
							# 	text = "FRONTEND_SWITCH_CHARACTER"
							#
							# 	onclick = "[PauseMenu.SwitchCharacter]"
							# 	visible = "[Not( Or( Or( PauseMenu.IsLobbyOpen, IsIronmanEnabled ), GameHasMultiplePlayers ) )]"
							# }
							### to here

							widget = { size = { 10 15 }}
							button = {
								using = default_button_tertiary
								using = fontsize_large
								size = { 280 55 }
								name = "exit_button"
								text = "[PauseMenu.GetExitName]"
								using = select_button_sound
								### v3 replacement
								onclick = "[PauseMenu.ExitGame]"
								# onclick = "[PauseMenu.ExitGame( '(bool)yes' )]"
								### to here
							}
						}
					}

					hbox = {
						margin_top = 30
						spacing = 70

						pops_login_accountwidget = {
							size = { 45 45 }

							blockoverride "properties" {
								onclick = "[OnToggleLoginWindow]"
								using = select_button_sound
							}

							text_single = {
								parentanchor = bottom|hcenter
								position = { 0 20 }
								max_width = 100
								min_width = 100
								align = center
								#fontsize = 13

								text = "ACCOUNT"
								default_format = "#clickable"
							}
						}

						button_settings = {
							name = "settings"
							onclick = "[PauseMenu.OpenSettings]"
							using = select_button_sound
							size = { 45 45 }

							text_single = {
								parentanchor = bottom|hcenter
								position = { 0 20 }
								max_width = 100
								min_width = 100
								align = center
								#fontsize = 13

								text = "SETTINGS"
								default_format = "#clickable"
							}
						}

						button_achievements = {
							name = "achievements"
							onclick = "[OpenAchievements]"
							using = select_button_sound
							enabled = "[AreAchievementsAvailable]"
							tooltip = "[GetAchievementsAvailableString]"
							size = { 45 45 }

							text_single = {
								parentanchor = bottom|hcenter
								position = { 0 20 }
								max_width = 100
								min_width = 100
								align = center
								#fontsize = 13

								text = "ACHIEVEMENTS_LABEL"
								default_format = "#clickable"
							}
						}

						button_theme_selector = {
							name = "theme_selector"
							size = { 45 45 }

							onclick = "[ToggleThemeSettings]"
							using = select_button_sound

							onclick = "[GetVariableSystem.Set( 'theme_selector_theme_tab', 'true' )]"
	        				onclick = "[GetVariableSystem.Clear( 'theme_selector_settings_tab')]"

							text_single = {
								parentanchor = bottom|hcenter
								position = { 0 20 }
								max_width = 100
								min_width = 100

								text = "THEME"
								default_format = "#clickable"
								align = center
							}

							icon = {
								visible = "[HasAnyAvailableNewThemes]"
								texture = "gfx/interface/current_situations/icon_situation_unread.dds"
								size = { 25 25 }
								position = { 10 0 }
								parentanchor = bottom|right
							}
						}

						hbox = {
							button_rules = {
								name = "game_rules"
								onclick = "[OpenGameRules]"
								using = select_button_sound
								size = { 45 45 }

								text_single = {
									parentanchor = bottom|hcenter
									position = { 0 20 }
									max_width = 100
									min_width = 100
									align = center
									#fontsize = 13

									default_format = "#clickable"
									text = "GAME_RULES"
								}
							}

							vbox = {
								datacontext = "[GetGameRules]"
								visible = "[Not( GameHasMultiplePlayers )]"
								spacing = 5

								ironman_save_icon = {
									visible = "[IsIronmanEnabled]"
									size = { 25 25 }
									tooltip = IRONMAN_ENABLED
								}
								ironman_disabled_icon = {
									visible = "[Not( IsIronmanEnabled )]"
									size = { 25 25 }
									tooltip = IRONMAN_DISABLED
								}
								achievements_enabled_icon = {
									visible = "[CanGetAchievements]"
									size = { 25 25 }
									tooltip = ACHIEVEMENTS_ENABLED
								}
								achievements_disabled_icon = {
									visible = "[Not( CanGetAchievements )]"
									size = { 25 25 }
									tooltip = ACHIEVEMENTS_DISABLED
								}
							}
						}
					}
				}
				clickable_version_number = {
					blockoverride "version_text" {
						text = "VERSION_SHORT"
						align = center
						alpha = 0.65
						margin_top = 30
					}
				}
				text_single = {
					text = "VFM_VERSION"
				}
			}
		}
	}
}

window = {
	name = "ingame_load_ingame"
	movable = no
	layer = confirmation
	size = { 100% 100% }

	using = Animation_ShowHide_Quick
	using = Background_Full_Dim

	button_normal = {
		size = { 100% 100% }
		onclick = "[LoadIngameWindow.OnBack]"
	}

	widget_load_game = {
		parentanchor = center
		size = { 1030 70% }

		blockoverride "datamodel_savegames"
		{
			datamodel = "[LoadIngameWindow.GetSaveGames]"
		}

		blockoverride "invalid_saves_click"
		{
			onclick = "[LoadIngameWindow.OnShowInvalidSavegames]"
		}

		blockoverride "invalid_saves_checked"
		{
			checked = "[LoadIngameWindow.ShouldShowInvalidSavegames]"
		}

		blockoverride "header_buttons" 
		{
			header_pattern = {
				layoutpolicy_horizontal = expanding

				blockoverride "header_text"
				{
					text = "LOAD_GAME"
				}

				blockoverride "button_close" 
				{
					shortcut = "close_window"
					onclick = "[LoadIngameWindow.OnBack]"
				}

				blockoverride "button_back" {
					visible = no
				}
			}
		}

		blockoverride "selected_save"
		{
			datacontext = "[LoadIngameWindow.GetSelectedSavegame]"	
		}

		blockoverride "has_selected_save"
		{
			enabled = "[LoadIngameWindow.HasSelectedSavegame]"	
		}

		blockoverride "button_delete_save"
		{
			onclick = "[LoadIngameWindow.OnDelete]"
		}

		blockoverride "button_load_save"
		{
			onclick = "[LoadIngameWindow.OnLoad]"
		}
		blockoverride "layout_widget"
		{
			visible = "[Not(LoadIngameWindow.HasSelectedSavegame)]"
		}
	}
}

Types SaveGameTypes
{
	type cloud_save_checkbutton = button_checkbox
	{
		name = "cloud_save" # Name referenced from code
		checked = "[CloudSaveData.ShouldSaveToCloud]"
		tooltip = "[CloudSaveData.GetCloudSaveTooltip]"
		onclick = "[CloudSaveData.OnCloudSaveClick]"
		enabled = "[CloudSaveData.AreCloudSavesAvailable]"
	}
}